---
title: "Data Science Scrapbook"
title-block-banner: false
toc: true
toc-title: "Table of Contents"
toc-location: left
---

As an earnest, early disclaimer, I'm stealing the basis of this list from the inimitable [Javier Orraca-Deatcu](https://www.javierorracadeatcu.com/). I offer thanks to Javier and everyone else at SoCal RUG for inducting me into the Quarto & DuckDB fandoms, and helping me appreciate the breadth to which R can be applied.

Here, I'm going to present a number of things I know to be helpful as well as various vignettes, package reference manuals, or case studies I've used in my work and have found success with. Consider these endorsements ranging from gentle to overwhelming. In the post-stackexchange/overflow era with LLM chaff filling the first three pages of all our search results, I'd say that textbook learning might be making a comeback.

## Specific Statistical Methodologies

-   Linear Mixed Models: Abandoning independence assumptions, looking at data that is explicitly hierarchical, longitudinal, or otherwise correlated.

    -   [UCLA ARC Mixed Modeling Introduction](https://stats.oarc.ucla.edu/other/mult-pkg/introduction-to-linear-mixed-models/)

    -   [Case Study using *lme4* and *afex* packages](https://mspeekenbrink.github.io/sdam-r-companion/linear-mixed-effects-models.html)

-   LASSO \[and its relatives\]: Regression utilizing a penalization term for feature selection and dimension reduction.

    -   [Introduction to GLMNET from Tibsherani et al. at Stanford](https://glmnet.stanford.edu/articles/glmnet.html)

    -   [Penn State Graduate Data Mining Content on Shrinkage](https://online.stat.psu.edu/stat508/lesson/5)

    -   [Discussion on Deciding Î»](https://stackoverflow.com/questions/23240182/deciding-threshold-for-glm-logistic-regression-model-in-r)

    -   [Assessing GLMNET results (Tibsherani et al.)](https://glmnet.stanford.edu/reference/assess.glmnet.html)

-   AUC/ROC interpretation: Finding an optimal cutoff value for classification to maximize sensitivity and specificity.

    -   [AUC/ROC in clinical diagnosis contexts](https://pubmed.ncbi.nlm.nih.gov/38024184/)

-   Random Forests: Machine learning through a surfeit of decision trees. Fast and efficient, but significantly black-box.

    -   [Intro to the *ranger* R package, faster and more flexible than randomForest](https://cran.r-project.org/web/packages/ranger/ranger.pdf)

    -   [Examples from and comparisons between both rF and rr](https://www.css.cornell.edu/faculty/dgr2/_static/files/R_html/CompareRandomForestPackages.html)

-   Multinomial Logistic Regression: Going beyond binary decisionmaking.

    -   [Multinomial in R with *nnet*](https://rpubs.com/beane/n4_2)

-   Ordinal Logistic Regression: Logistic with considerations for specific ordering or unequal 'distances' between each level of the multinomial response

    -   [Ordinal Logistic with *polr*, from UCLA ARC](https://stats.oarc.ucla.edu/r/dae/ordinal-logistic-regression/)

    -   [Interpreting Ordinal Results, from UCLA ARC](https://stats.oarc.ucla.edu/r/faq/ologit-coefficients/)

## R Books: Classics

-   [R for Data Science (2e)](https://r4ds.hadley.nz/): The de facto introduction from the COPSS winner himself
-   [Advanced R (2e)](https://adv-r.hadley.nz/): Object oriented programming extensions
-   [Mastering Shiny](https://mastering-shiny.org/): \[per Javier O.\] - Designed to teach the foundations of Shiny for web development and more advanced concepts such as the introduction of modules to the Shiny framework
-   [R Packages (2e)](https://r-pkgs.org/): \[per Javier O.\] - The definitive reference point for R package development "covering workflow and process, alongside the presentation of all the important moving parts that make up an R package"

## R Books: Applied Resources

-   [Tidy Modeling with R](https://www.tmwr.org/): \[per Javier O.\] - A to Z resource on predictive modeling workflows using the tidymodels framework
-   [Deep Learning with R (2e)](https://www.manning.com/books/deep-learning-with-r-second-edition): \[per Javier O.\] - In-depth introduction to artificial intelligence and deep learning applications with R using the Keras library
-   [Forecasting Principles and Practice (3e)](https://otexts.com/fpp3/): \[per Javier O.\] - Said best by the author, "The book is written for three audiences: (1) people finding themselves doing forecasting in business when they may not have had any formal training in the area; (2) undergraduate students studying business; (3) MBA students doing a forecasting elective"
-   [Regression and Other Studies](https://www.cambridge.org/core/books/regression-and-other-stories/DD20DD6C9057118581076E54E40C372C): \[per Javier O.\] - Super applied textbook on advanced regression techniques, Bayesian inference, and causal inference
-   [Supervised Machine Learning for Text Analysis in R](https://smltar.com/): NLP from two Posit engineers, [Emil Hvitfeldt](https://emilhvitfeldt.com/) and [Julia Silge](https://juliasilge.com/) - I treasure my signed copy!
-   [Feature Engineering A-Z](https://feaz-book.com/): Another [Emil Hvitfeldt](https://emilhvitfeldt.com/) home run, this serves as a reference guide to nearly all feature engineering methods you will encounter with examples in R and Python

## R Packages

-   [tidyverse](https://www.tidyverse.org/): A collection of packages for data manipulation and functional programming - the sooner you incorporate these tools into your coding, the happier your colleagues will be
-   [tidymodels](https://www.tidymodels.org/): \[per Javier O.\] - Hands-down my preferred collection of packages for building reproducible machine learning recipes, workflows, model tuning, model stacking, and cross-validation
-   [tidyverts](https://tidyverts.org/): \[per Javier O.\] - Tidymodels, but time series, from Rob Hyndman's lab
-   [plotly](https://plotly.com/r/): \[per Javier O.\] - Interactive visualizations and 3D (WebGL) charts
-   [embed](https://embed.tidymodels.org/): \[per Javier O.\] - Extension to the [recipes](https://recipes.tidymodels.org/) tidyverse package
-   [caret](https://cran.r-project.org/web/packages/caret/vignettes/caret.html): Data processing and cross-validation with **robust** stratification options - one of the R tools I miss most when working with Python (Bonus: [Data splitting with *caret*](https://topepo.github.io/caret/data-splitting.html)*)*
-   [igraph](https://r.igraph.org/): Network theory and analysis - works in R and Python

## Language Agnostic ETL Frameworks

-   [Arrow](https://arrow.apache.org/): \[per Javier O.\] - Apache Arrow is a columnar memory format for flat and hierarchical data, organized for efficient analytic operations, supporting zero-copy reads for lightning-fast data access without serialization overhead
-   [DuckDB](https://duckdb.org/): \[per Javier O.\] - DuckDB is an in-process SQL OLAP database management system (that plays nicely with Arrow) capable of larger than memory processing of tabular data
-   [Polars](https://www.pola.rs/): \[per Javier O.\] - Polars is a lightning fast DataFrame library/in-memory query engine written in Rust and built upon the Arrow specification - It's a great tool for efficient data wrangling, data pipelines, snappy APIs and much more
-   [Spark](https://spark.apache.org/): \[per Javier O.\] - Apache Spark is a multi-language engine for executing data engineering, data science, and machine learning on single-node machines or clusters

## Python Resources

-   [The Quick Python Book (3e)](https://www.manning.com/books/the-quick-python-book-third-edition): \[per Javier O.\] - This book by Naomi Ceder is a few years old now (2018) but it's the best end-to-end intro on Python that I've yet read taking you from basic classes / structures to function writing to working with modules
-   [Python Data Science Handbook](https://jakevdp.github.io/PythonDataScienceHandbook/): \[per Javier O.\] - Introduction to the core libraries essential for working with data in Python
-   [Effective Pandas 2: Opinionated Patterns for Data Manipulation](https://store.metasnake.com/effective-pandas-book): \[per Javier O.\] - After a wildly successful 1st edition, Matt Harrison is back with the revised 2nd edition with easy to follow tutorials for mastering the popular Pandas library
-   [Tidy Finance with Python](https://www.tidy-finance.org/python/): \[per Javier O.\] - This is one of my favorite newer books covering complex financial modeling, valuation, and pricing and represents "an opinionated approach to empirical research in financial economics \[with an\] open-source code base"
-   [The Official Python Style Guide](https://www.python.org/doc/essays/styleguide/): \[per Javier O.\] - Not a bad idea to co-opt this early - as with tidyverse in R, the sooner you do it, the happier your colleagues will be, on average

## Python Packages

-   [NumPy](https://numpy.org/): \[per Javier O.\] - Brings the computational power of C and Fortran to Python programmers for applying high-level mathematical functions to arrays and more
-   [Pandas](https://pandas.pydata.org/): \[per Javier O.\] - This is the most popular package for data manipulation and analysis with extended operations available for tabular and time series data
-   [Matplotlib](https://matplotlib.org/): \[per Javier O.\] - A comprehensive library for creating static, animated, and interactive visualizations in Python
-   [scikit-learn](https://scikit-learn.org/stable/): \[per Javier O.\] - Built on top of NumPy, SciPy, and matplotlib, "sklearn" makes the development of predictive analysis workflows a simple and reproducible process
-   [Beautiful Soup](https://www.crummy.com/software/BeautifulSoup/): \[per Javier O.\] - The `beautifulsoup4` library makes web scraping HTML and XML data a breeze
-   [Streamlit](https://streamlit.io/): \[per Javier O.\] - Using pure Python, this package lets you build interactive web apps in minutes with no UI / front-end experience required
-   [Shiny for Python](https://shiny.posit.co/py/): \[per Javier O.\] - The popular Shiny framework for R is finally available for Python - Create highly interactive visualizations, realtime dashboards, data explorers, model demos, sophisticated workflow apps, and anything else you can imagineâall in pure Python, with no web development skills required
